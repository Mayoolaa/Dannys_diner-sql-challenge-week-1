-- 1. What is the total amount each customer spent at the restaurant?
  
  
  select s.customer_id, sum(m.price) as total_amount
  from dannys_diner.sales as s
  LEFT JOIN dannys_diner.menu as m
  on s.product_id = m.product_id
  group by s.customer_id; 
  
 -- 2. How many days has each customer visited the restaurant?
 
  
  select customer_id, count(distinct(order_date)) as number_of_days
  from dannys_diner.sales
  group by customer_id;


--3. What was the first item from the menu purchased by each customer?
  
  with ranking as( 
   select s.customer_id, m.product_name, s.order_date, dense_rank() over (partition by s.customer_id order by s.order_date) as rank
   from dannys_diner.sales as s
   left join dannys_diner.menu as m
   on s.product_id = m.product_id) 
   select customer_id, product_name
   from ranking
   where rank = 1;

  --4. What is the most purchased item on the menu and how many times was it purchased by all customers?
  
  
  select m.product_name, count(s.product_id) as no_of_purchases
  from dannys_diner.sales as s
  left join dannys_diner.menu as m
  on s.product_id = m.product_id
  group by m.product_name
  order by count(s.product_id) desc
limit 1;

-- 5. Which item was the most popular for each customer?
 
 with cte as( 
   select s.customer_id, m.product_name, count(s.product_id) as purchase_count, dense_rank() over (partition by customer_id order by count(s.product_id)desc) as rank
   from dannys_diner.sales as s
   left join dannys_diner.menu as m
   on s.product_id = m.product_id
  group by s.customer_id, m.product_name, s.product_id) 
   
   select customer_id, product_name, purchase_count
   from cte
   where rank = 1;


--6. Which item was purchased first by the customer after they became a member?
   
   with cte as( 
   select s.customer_id, m.product_name, s.order_date, dense_rank() over (partition by s.customer_id order by s.order_date) as rank
   from dannys_diner.sales as s
   left join dannys_diner.menu as m
   on s.product_id = m.product_id
   left join dannys_diner.members as mem
     on s.customer_id = mem.customer_id
   where s.order_date >= mem.join_date) 
   
   select customer_id, product_name
   from cte
   where rank = 1;


-- 7. Which item was purchased just before the customer became a member? a member?
   
   with cte as( 
   select s.customer_id, m.product_name, s.order_date, dense_rank() over (partition by s.customer_id order by s.order_date) as rank
   from dannys_diner.sales as s
   left join dannys_diner.menu as m
   on s.product_id = m.product_id
   left join dannys_diner.members as mem
     on s.customer_id = mem.customer_id
   where s.order_date < mem.join_date) 
   
   select customer_id, product_name
   from cte
   where rank = 1;


-- 8. What is the total items and amount spent for each member before they became a member?

select s.customer_id, count(s.product_id) as total_items, sum(m.price) as amount_spent
from dannys_diner.sales as s
left join dannys_diner.menu as m
on s.product_id = m.product_id
left join dannys_diner.members as mem
on s.customer_id = mem.customer_id
where s.order_date < mem.join_date
group by s.customer_id
order by s.customer_id;


-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

with points as(
select product_id, 
   case when product_name = 'sushi' then price * 20 else price * 10 end as points
   from dannys_diner.menu)
   
   select s.customer_id, sum(p.points) as points
   from dannys_diner.sales as s
   left join points as p
   on p.product_id = s.product_id
   group by s.customer_id
   order by s.customer_id;
